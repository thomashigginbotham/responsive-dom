{"version":3,"sources":["jquery.responsive-dom.js"],"names":["factory","define","amd","jQuery","$","fn","responsiveDom","options","settings","extend","appendTo","prependTo","mediaQuery","callback","sourceEl","this","placeholder","isMoved","init","updateDom","window","on","debounce","matchMedia","matches","moveElement","revertElement","document","contains","after","eq","append","prepend","remove","func","wait","timeout","clearTimeout","setTimeout"],"mappings":"CAIC,SAASA,GACT,YAEsB,mBAAXC,SAAyBA,OAAOC,IAC1CD,QAAQ,UAAWD,GAEnBA,EAAQG,SAER,SAASC,GACV,YAEAA,GAAEC,GAAGC,cAAgB,SAAUC,GAG9B,GAAIC,GAAWJ,EAAEK,QAChBC,SAAU,KACVC,UAAW,KACXC,WAAY,iBACZC,SAAU,MACRN,GAECO,EAAWC,KACXC,EAAc,KACdC,GAAU,EAKVC,EAAO,WAEVC,IAGAf,EAAEgB,QAAQC,GAAG,uBAAwBC,EAASH,EAAW,OAMtDA,EAAY,WAEf,IAAKF,GAAWM,WAAWf,EAASI,YAAYY,QAC/CC,IACAR,GAAU,MACJ,CAAA,IAAIA,GAAYM,WAAWf,EAASI,YAAYY,QAItD,MAHAE,KACAT,GAAU,EAMsB,kBAAtBT,GAASK,UACnBL,EAASK,SAASI,IAQhBQ,EAAc,WAEZE,SAASC,WAAYD,SAASC,SAASd,EAAS,MAEpDE,EAAcZ,EAAE,iDAChBU,EAASe,MAAMb,GAGU,OAAtBR,EAASE,SAEXN,EAAEI,EAASE,UAAUoB,GAAG,GAAGC,OAAOjB,GAGlCV,EAAEI,EAASG,WAAWmB,GAAG,GAAGE,QAAQlB,KASnCY,EAAgB,WAEC,OAAhBV,GAA0BW,SAASC,WAAYD,SAASC,SAASZ,EAAY,MAEhFA,EAAYa,MAAMf,GAElBE,EAAYiB,SACZjB,EAAc,OAWZM,EAAW,SAASY,EAAMC,GAC7B,GAAIC,EAEJ,OAAO,YACNC,aAAaD,GAEbA,EAAUE,WAAW,WACpBJ,KACEC,IAQL,OAHAjB,KAGOH","file":"jquery.responsive-dom.min.js","sourcesContent":["/**\n * A jQuery plugin to move elements in the DOM based on media queries\n * @param options\n */\n(function(factory) {\n\t'use strict';\n\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['jquery'], factory);\n\t} else {\n\t\tfactory(jQuery);\n\t}\n}(function($) {\n\t'use strict';\n\n\t$.fn.responsiveDom = function (options) {\n\t\t// The settings object provides default settings.\n\t\t// The options argument can override them.\n\t\tvar settings = $.extend({\n\t\t\tappendTo: null,               // The element will be appended here\n\t\t\tprependTo: null,              // (or prepended here)...\n\t\t\tmediaQuery: '(min-width: 0)', // ...when this media query is true.\n\t\t\tcallback: null                // If provided, the callback will run after DOM updates.\n\t\t}, options);\n\n\t\tvar sourceEl = this;\n\t\tvar placeholder = null;\n\t\tvar isMoved = false;\n\n\t\t/**\n\t\t * Initializes the plugin\n\t\t */\n\t\tvar init = function() {\n\t\t\t// Update the DOM now...\n\t\t\tupdateDom();\n\n\t\t\t// ...and again when the window resizes\n\t\t\t$(window).on('resize.responsiveDom', debounce(updateDom, 100));\n\t\t};\n\n\t\t/**\n\t\t * Moves or reverts element DOM position if the media query conditions are met\n\t\t */\n\t\tvar updateDom = function() {\n\t\t\t// Check if media query conditions are met\n\t\t\tif (!isMoved && matchMedia(settings.mediaQuery).matches) {\n\t\t\t\tmoveElement();\n\t\t\t\tisMoved = true;\n\t\t\t} else if (isMoved && !matchMedia(settings.mediaQuery).matches) {\n\t\t\t\trevertElement();\n\t\t\t\tisMoved = false;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Run callback function if provided\n\t\t\tif (typeof settings.callback === 'function') {\n\t\t\t\tsettings.callback(isMoved);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Creates a placeholder at the element's current DOM position and moves the\n\t\t * element to its new position\n\t\t */\n\t\tvar moveElement = function() {\n\t\t\t// Verify the source element still exists in the DOM\n\t\t\tif (!document.contains || document.contains(sourceEl[0])) {\n\t\t\t\t// Create placeholder so we can move it back if needed\n\t\t\t\tplaceholder = $('<span class=\"js-responsive-dom-placeholder\"/>');\n\t\t\t\tsourceEl.after(placeholder);\n\n\t\t\t\t// Check if Append or Prepend\n\t\t\t\tif(settings.appendTo !== null) {\n\t\t\t\t\t// Move element\n\t\t\t\t\t$(settings.appendTo).eq(0).append(sourceEl);\n\t\t\t\t} else {\n\t\t\t\t\t// Move element\n\t\t\t\t\t$(settings.prependTo).eq(0).prepend(sourceEl);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns element to its previous position in the DOM and removes the\n\t\t * placeholder element\n\t\t */\n\t\tvar revertElement = function() {\n\t\t\t// Verify the placeholder still exists in the DOM\n\t\t\tif (placeholder !== null && (!document.contains || document.contains(placeholder[0]))) {\n\t\t\t\t// Move element back and remove placeholder\n\t\t\t\tplaceholder.after(sourceEl);\n\n\t\t\t\tplaceholder.remove();\n\t\t\t\tplaceholder = null;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns a function that cannot be called in succession unless a specified\n\t\t * amount of time has passed\n\t\t * @param func - The function to debounce\n\t\t * @param wait - The wait time (ms) before running the function again\n\t\t * @returns The debounced function\n\t\t */\n\t\tvar debounce = function(func, wait) {\n\t\t\tvar timeout;\n\n\t\t\treturn function() {\n\t\t\t\tclearTimeout(timeout);\n\n\t\t\t\ttimeout = setTimeout(function() {\n\t\t\t\t\tfunc();\n\t\t\t\t}, wait);\n\t\t\t};\n\t\t};\n\n\t\t// Let's go!\n\t\tinit();\n\n\t\t// Always return the target object to allow chaining.\n\t\treturn this;\n\t};\n}));\n"]}